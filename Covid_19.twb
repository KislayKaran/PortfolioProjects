<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20193.19.0821.2225                               -->
<workbook original-version='18.1' source-build='2019.3.0 (20193.19.0821.2225)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='PopulationVaccinated (Portfolio_Project)' inline='true' name='federated.0fvqzl910dgxcx15vze020578xuf' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='DESKTOP-4LJQO28' name='sqlserver.0plrrzl1jed0cn1ecgxmu1ay9g8v'>
            <connection authentication='sspi' class='sqlserver' dbname='Portfolio_Project' odbc-native-protocol='yes' one-time-sql='' server='DESKTOP-4LJQO28' />
          </named-connection>
        </named-connections>
        <relation connection='sqlserver.0plrrzl1jed0cn1ecgxmu1ay9g8v' name='PopulationVaccinated' table='[dbo].[PopulationVaccinated]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[PopulationVaccinated]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[PopulationVaccinated]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[PopulationVaccinated]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[PopulationVaccinated]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_vaccinations</remote-name>
            <remote-type>130</remote-type>
            <local-name>[new_vaccinations]</local-name>
            <parent-name>[PopulationVaccinated]</parent-name>
            <remote-alias>new_vaccinations</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Rolling_people_vaccinated</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Rolling_people_vaccinated]</local-name>
            <parent-name>[PopulationVaccinated]</parent-name>
            <remote-alias>Rolling_people_vaccinated</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DailyBasis_PopulationVaaccinated</remote-name>
            <remote-type>5</remote-type>
            <local-name>[DailyBasis_PopulationVaaccinated]</local-name>
            <parent-name>[PopulationVaccinated]</parent-name>
            <remote-alias>DailyBasis_PopulationVaaccinated</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='DailyBasis PopulationVaaccinated' datatype='real' name='[DailyBasis_PopulationVaaccinated]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Rolling people vaccinated' datatype='integer' name='[Rolling_people_vaccinated]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column caption='Date' datatype='datetime' name='[date]' role='dimension' type='ordinal' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='New Vaccinations' datatype='integer' datatype-customized='true' name='[new_vaccinations]' role='measure' type='quantitative' />
      <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
      <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
      <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (DAY(Date))' hidden='true' name='[Action (DAY(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tdy:date:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.445623' measure-ordering='alphabetic' measure-percentage='0.554377' rowDisplayCount='33936' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:location:nk]' type='palette'>
            <map to='#17becf'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Northern Cyprus&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#b3e0a6'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Guernsey&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Macao&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Nauru&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='USA_fst2ndBoosterVaccinations (Portfolio_Project)' inline='true' name='federated.1sq6ctv0b52ywq10pn3xg1w7rqaw' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='DESKTOP-4LJQO28' name='sqlserver.07lwc4o109g9fm1ac9aak12esncy'>
            <connection authentication='sspi' class='sqlserver' dbname='Portfolio_Project' odbc-native-protocol='yes' one-time-sql='' server='DESKTOP-4LJQO28' />
          </named-connection>
        </named-connections>
        <relation connection='sqlserver.07lwc4o109g9fm1ac9aak12esncy' name='USA_fst2ndBoosterVaccinations' table='[dbo].[USA_fst2ndBoosterVaccinations]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[USA_fst2ndBoosterVaccinations]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[location]</local-name>
            <parent-name>[USA_fst2ndBoosterVaccinations]</parent-name>
            <remote-alias>location</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[USA_fst2ndBoosterVaccinations]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>each_day_with_1st_dose</remote-name>
            <remote-type>20</remote-type>
            <local-name>[each_day_with_1st_dose]</local-name>
            <parent-name>[USA_fst2ndBoosterVaccinations]</parent-name>
            <remote-alias>each_day_with_1st_dose</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_people_vaccinated_with_1st_dose</remote-name>
            <remote-type>20</remote-type>
            <local-name>[total_people_vaccinated_with_1st_dose]</local-name>
            <parent-name>[USA_fst2ndBoosterVaccinations]</parent-name>
            <remote-alias>total_people_vaccinated_with_1st_dose</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>each_day_with_2nd_dose</remote-name>
            <remote-type>20</remote-type>
            <local-name>[each_day_with_2nd_dose]</local-name>
            <parent-name>[USA_fst2ndBoosterVaccinations]</parent-name>
            <remote-alias>each_day_with_2nd_dose</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_fully_vaccinated</remote-name>
            <remote-type>130</remote-type>
            <local-name>[people_fully_vaccinated]</local-name>
            <parent-name>[USA_fst2ndBoosterVaccinations]</parent-name>
            <remote-alias>people_fully_vaccinated</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>each_day_boosters_dose</remote-name>
            <remote-type>20</remote-type>
            <local-name>[each_day_boosters_dose]</local-name>
            <parent-name>[USA_fst2ndBoosterVaccinations]</parent-name>
            <remote-alias>each_day_boosters_dose</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>19</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_BIGINT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SBIGINT&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_boosters</remote-name>
            <remote-type>130</remote-type>
            <local-name>[total_boosters]</local-name>
            <parent-name>[USA_fst2ndBoosterVaccinations]</parent-name>
            <remote-alias>total_boosters</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column caption='Date' datatype='datetime' name='[date]' role='dimension' type='ordinal' />
      <column caption='Daily Boosters Dose' datatype='integer' name='[each_day_boosters_dose]' role='measure' type='quantitative' />
      <column caption='Daily 1st Dose' datatype='integer' name='[each_day_with_1st_dose]' role='measure' type='quantitative' />
      <column caption='Daily 2nd Dose' datatype='integer' name='[each_day_with_2nd_dose]' role='measure' type='quantitative' />
      <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
      <column caption='People Fully Vaccinated' datatype='integer' datatype-customized='true' name='[people_fully_vaccinated]' role='measure' type='quantitative' />
      <column caption='Total Boosters' datatype='integer' datatype-customized='true' name='[total_boosters]' role='measure' type='quantitative' />
      <column caption='Total 1St Dose Vaccination' datatype='integer' name='[total_people_vaccinated_with_1st_dose]' role='measure' type='quantitative' />
      <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (DAY(Date))' hidden='true' name='[Action (DAY(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tdy:date:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.38992' measure-ordering='alphabetic' measure-percentage='0.61008' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='USA_Hospital_ICU_Admn (Portfolio_Project) (2)' inline='true' name='federated.0fwkpys0fhs2ne1403ele1qcr5a4' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='DESKTOP-4LJQO28' name='sqlserver.0syysj714kcqy6185wa620lxoyas'>
            <connection authentication='sspi' class='sqlserver' dbname='Portfolio_Project' odbc-native-protocol='yes' one-time-sql='' server='DESKTOP-4LJQO28' />
          </named-connection>
        </named-connections>
        <relation connection='sqlserver.0syysj714kcqy6185wa620lxoyas' name='USA_Hospital_ICU_Admn' table='[dbo].[USA_Hospital_ICU_Admn]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[USA_Hospital_ICU_Admn]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[USA_Hospital_ICU_Admn]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[USA_Hospital_ICU_Admn]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Currently_hospital_patients</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Currently_hospital_patients]</local-name>
            <parent-name>[USA_Hospital_ICU_Admn]</parent-name>
            <remote-alias>Currently_hospital_patients</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>hospital_in_out</remote-name>
            <remote-type>3</remote-type>
            <local-name>[hospital_in_out]</local-name>
            <parent-name>[USA_Hospital_ICU_Admn]</parent-name>
            <remote-alias>hospital_in_out</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Currently_patients_in_icu</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Currently_patients_in_icu]</local-name>
            <parent-name>[USA_Hospital_ICU_Admn]</parent-name>
            <remote-alias>Currently_patients_in_icu</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>icu_in_out</remote-name>
            <remote-type>3</remote-type>
            <local-name>[icu_in_out]</local-name>
            <parent-name>[USA_Hospital_ICU_Admn]</parent-name>
            <remote-alias>icu_in_out</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_deaths_each_day</remote-name>
            <remote-type>3</remote-type>
            <local-name>[new_deaths_each_day]</local-name>
            <parent-name>[USA_Hospital_ICU_Admn]</parent-name>
            <remote-alias>new_deaths_each_day</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>3</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[USA_Hospital_ICU_Admn]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Patients in Hospitals' datatype='integer' name='[Currently_hospital_patients]' role='measure' type='quantitative' />
      <column caption='Patients in ICU' datatype='integer' name='[Currently_patients_in_icu]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Date' datatype='datetime' name='[date]' role='dimension' type='ordinal' />
      <column caption='Hospital In-Out' datatype='integer' name='[hospital_in_out]' role='measure' type='quantitative' />
      <column caption='ICU In-Out' datatype='integer' name='[icu_in_out]' role='measure' type='quantitative' />
      <column caption='New Deaths Each Day' datatype='integer' name='[new_deaths_each_day]' role='dimension' type='quantitative' />
      <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
      <column-instance column='[Currently_hospital_patients]' derivation='Sum' name='[sum:Currently_hospital_patients:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Currently_patients_in_icu]' derivation='Sum' name='[sum:Currently_patients_in_icu:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.38992' measure-ordering='alphabetic' measure-percentage='0.61008' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#5b8cb8'>
              <bucket>&quot;[federated.0fwkpys0fhs2ne1403ele1qcr5a4].[sum:Currently_patients_in_icu:qk]&quot;</bucket>
            </map>
            <map to='#b60a1c'>
              <bucket>&quot;[federated.0fwkpys0fhs2ne1403ele1qcr5a4].[sum:Currently_hospital_patients:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='CountryWise_DeathPercentage (Portfolio_Project)' inline='true' name='federated.10xo4w60co4xlq1ck2jae0rqgwve' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='DESKTOP-4LJQO28' name='sqlserver.1f1mkf718f2chv1a97li10cclpdu'>
            <connection authentication='sspi' class='sqlserver' dbname='Portfolio_Project' odbc-native-protocol='yes' one-time-sql='' server='DESKTOP-4LJQO28' />
          </named-connection>
        </named-connections>
        <relation join='full' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[CountryWise_DeathPercentage].[Location]' />
              <expression op='[World_TotalCasesVsPopulation].[Location]' />
            </expression>
          </clause>
          <relation connection='sqlserver.1f1mkf718f2chv1a97li10cclpdu' name='CountryWise_DeathPercentage' table='[dbo].[CountryWise_DeathPercentage]' type='table' />
          <relation connection='sqlserver.1f1mkf718f2chv1a97li10cclpdu' name='World_TotalCasesVsPopulation' table='[dbo].[World_TotalCasesVsPopulation]' type='table' />
        </relation>
        <cols>
          <map key='[Death_Percentage]' value='[CountryWise_DeathPercentage].[Death_Percentage]' />
          <map key='[Location (World_TotalCasesVsPopulation)]' value='[World_TotalCasesVsPopulation].[Location]' />
          <map key='[Location]' value='[CountryWise_DeathPercentage].[Location]' />
          <map key='[Total_Cases]' value='[CountryWise_DeathPercentage].[Total_Cases]' />
          <map key='[Total_Deaths]' value='[CountryWise_DeathPercentage].[Total_Deaths]' />
          <map key='[continent]' value='[World_TotalCasesVsPopulation].[continent]' />
          <map key='[population]' value='[World_TotalCasesVsPopulation].[population]' />
          <map key='[ppln_prcnt_got_Covid]' value='[World_TotalCasesVsPopulation].[ppln_prcnt_got_Covid]' />
          <map key='[total_cases]' value='[World_TotalCasesVsPopulation].[total_cases]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[CountryWise_DeathPercentage]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_Cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total_Cases]</local-name>
            <parent-name>[CountryWise_DeathPercentage]</parent-name>
            <remote-alias>Total_Cases</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_Deaths</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Total_Deaths]</local-name>
            <parent-name>[CountryWise_DeathPercentage]</parent-name>
            <remote-alias>Total_Deaths</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Death_Percentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Death_Percentage]</local-name>
            <parent-name>[CountryWise_DeathPercentage]</parent-name>
            <remote-alias>Death_Percentage</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[World_TotalCasesVsPopulation]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location (World_TotalCasesVsPopulation)]</local-name>
            <parent-name>[World_TotalCasesVsPopulation]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[World_TotalCasesVsPopulation]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>8</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[World_TotalCasesVsPopulation]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ppln_prcnt_got_Covid</remote-name>
            <remote-type>5</remote-type>
            <local-name>[ppln_prcnt_got_Covid]</local-name>
            <parent-name>[World_TotalCasesVsPopulation]</parent-name>
            <remote-alias>ppln_prcnt_got_Covid</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Death Percentage' datatype='real' name='[Death_Percentage]' role='measure' type='quantitative' />
      <column caption='Location (World TotalCasesVsPopulation)' datatype='string' name='[Location (World_TotalCasesVsPopulation)]' role='dimension' type='nominal' />
      <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Total Cases' datatype='real' name='[Total_Cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[Total_Deaths]' role='measure' type='quantitative' />
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
      <column caption='% Population Covid Infected' datatype='real' name='[ppln_prcnt_got_Covid]' role='measure' type='quantitative' />
      <column caption='Total Cases1' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.334218' measure-ordering='alphabetic' measure-percentage='0.665783' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <filter class='quantitative' column='[Total_Cases]' filter-group='2' included-values='non-null' />
      <filter class='quantitative' column='[Total_Deaths]' filter-group='2' included-values='non-null' />
    </datasource>
    <datasource caption='daily_CasesPoulationDeaths (Portfolio_Project)' inline='true' name='federated.0amvl9o0fahfj916jpyva1sagaaz' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='DESKTOP-4LJQO28' name='sqlserver.1b4l7xk1u3jubz1fe4gff1el63ok'>
            <connection authentication='sspi' class='sqlserver' dbname='Portfolio_Project' odbc-native-protocol='yes' one-time-sql='' server='DESKTOP-4LJQO28' />
          </named-connection>
        </named-connections>
        <relation connection='sqlserver.1b4l7xk1u3jubz1fe4gff1el63ok' name='daily_CasesPoulationDeaths' table='[dbo].[daily_CasesPoulationDeaths]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>continent</remote-name>
            <remote-type>130</remote-type>
            <local-name>[continent]</local-name>
            <parent-name>[daily_CasesPoulationDeaths]</parent-name>
            <remote-alias>continent</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Location</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Location]</local-name>
            <parent-name>[daily_CasesPoulationDeaths]</parent-name>
            <remote-alias>Location</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[daily_CasesPoulationDeaths]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_TYPE_TIMESTAMP&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_TYPE_TIMESTAMP&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[total_cases]</local-name>
            <parent-name>[daily_CasesPoulationDeaths]</parent-name>
            <remote-alias>total_cases</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>new_cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[new_cases]</local-name>
            <parent-name>[daily_CasesPoulationDeaths]</parent-name>
            <remote-alias>new_cases</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>total_deaths</remote-name>
            <remote-type>130</remote-type>
            <local-name>[total_deaths]</local-name>
            <parent-name>[daily_CasesPoulationDeaths]</parent-name>
            <remote-alias>total_deaths</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>255</width>
            <contains-null>true</contains-null>
            <padded-semantics>true</padded-semantics>
            <collation flag='2147483649' name='LEN_RUS_S2_VWIN' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_WVARCHAR&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_WCHAR&quot;</attribute>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population</remote-name>
            <remote-type>5</remote-type>
            <local-name>[population]</local-name>
            <parent-name>[daily_CasesPoulationDeaths]</parent-name>
            <remote-alias>population</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Location' datatype='string' name='[Location]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
      <column caption='Date' datatype='datetime' name='[date]' role='dimension' type='ordinal' />
      <column caption='New Cases' datatype='real' name='[new_cases]' role='measure' type='quantitative' />
      <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
      <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='string' name='[total_deaths]' role='dimension' type='nominal' />
      <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
      <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (DAY(Date))' hidden='true' name='[Action (DAY(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tdy:date:ok]' />
        </groupfilter>
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.502232' measure-ordering='alphabetic' measure-percentage='0.497768' rowDisplayCount='166328' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Location:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;British Virgin Islands&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Samoa&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bonaire Sint Eustatius and Saba&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Congo&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Palestine&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Wallis and Futuna&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Democratic Republic of Congo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Aruba&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Curacao&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;French Polynesia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tonga&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Anguilla&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Faeroe Islands&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hong Kong&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Saint Pierre and Miquelon&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;United States&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bermuda&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Kiribati&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vanuatu&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Cape Verde&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Isle of Man&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Turks and Caicos Islands&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;New Caledonia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;South Korea&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Cayman Islands&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Greenland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Myanmar&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Montserrat&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Timor&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Gibraltar&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Solomon Islands&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Palau&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Taiwan&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <filter class='categorical' column='[total_deaths]' filter-group='2'>
        <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
          <groupfilter function='level-members' level='[total_deaths]' />
          <groupfilter function='member' level='[total_deaths]' member='%null%' />
        </groupfilter>
      </filter>
    </datasource>
    <datasource caption='World_DeathPercentage (Portfolio_Project)' inline='true' name='federated.0upbcbn1sd5sej14ktqmc1w3exqt' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='DESKTOP-4LJQO28' name='sqlserver.11xb93c1im5dg41euc5x114m8cp5'>
            <connection authentication='sspi' class='sqlserver' dbname='Portfolio_Project' odbc-native-protocol='yes' one-time-sql='' server='DESKTOP-4LJQO28' />
          </named-connection>
        </named-connections>
        <relation connection='sqlserver.11xb93c1im5dg41euc5x114m8cp5' name='World_DeathPercentage' table='[dbo].[World_DeathPercentage]' type='table' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Total_Cases</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Total_Cases]</local-name>
            <parent-name>[World_DeathPercentage]</parent-name>
            <remote-alias>Total_Cases</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Total_Deaths</remote-name>
            <remote-type>3</remote-type>
            <local-name>[Total_Deaths]</local-name>
            <parent-name>[World_DeathPercentage]</parent-name>
            <remote-alias>Total_Deaths</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_INTEGER&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_SLONG&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Global_DeathPercentage</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Global_DeathPercentage]</local-name>
            <parent-name>[World_DeathPercentage]</parent-name>
            <remote-alias>Global_DeathPercentage</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;SQL_FLOAT&quot;</attribute>
              <attribute datatype='string' name='DebugWireType'>&quot;SQL_C_DOUBLE&quot;</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Global Death Percentage' datatype='real' name='[Global_DeathPercentage]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Total Cases' datatype='real' name='[Total_Cases]' role='measure' type='quantitative' />
      <column caption='Total Deaths' datatype='integer' name='[Total_Deaths]' role='measure' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.38992' measure-ordering='alphabetic' measure-percentage='0.61008' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Highlight 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source type='sheet' worksheet='Vaccination Drive in Top 10 Countries' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Location' />
        <param name='target' value='Vaccination Drive in Top 10 Countries' />
      </command>
    </action>
    <action caption='Highlight 2 (generated)' name='[Action2]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='COVID_19' type='sheet' />
      <command command='tsc:brush'>
        <param name='field-captions' value='Location' />
        <param name='target' value='COVID_19' />
      </command>
    </action>
    <action caption='Filter 1 (generated)' name='[Action3]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='COVID_19' type='sheet' worksheet='Global Numbers' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='COVID_19' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action5]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='COVID_19' type='sheet' worksheet='USA Hospitals, ICU and Deaths' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='COVID_19' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Country-wise  Monthy Counts of COVID cases '>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Bookman Old Style'>Country-wise  Monthy Counts of COVID cases </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='daily_CasesPoulationDeaths (Portfolio_Project)' name='federated.0amvl9o0fahfj916jpyva1sagaaz' />
          </datasources>
          <datasource-dependencies datasource='federated.0amvl9o0fahfj916jpyva1sagaaz'>
            <column caption='Location' datatype='string' name='[Location]' role='dimension' type='nominal' />
            <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
            <column caption='Date' datatype='datetime' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[total_cases]' derivation='Max' name='[max:total_cases:qk]' pivot='key' type='quantitative' />
            <column caption='New Cases' datatype='real' name='[new_cases]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
            <column-instance column='[total_deaths]' derivation='None' name='[none:total_deaths:nk]' pivot='key' type='nominal' />
            <column-instance column='[new_cases]' derivation='Sum' name='[sum:new_cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
            <column caption='Total Cases' datatype='real' name='[total_cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='string' name='[total_deaths]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0amvl9o0fahfj916jpyva1sagaaz].[:Measure Names]'>
            <groupfilter function='level-members' level='[:Measure Names]' />
          </filter>
          <filter class='categorical' column='[federated.0amvl9o0fahfj916jpyva1sagaaz].[none:Location:nk]'>
            <groupfilter function='level-members' level='[none:Location:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0amvl9o0fahfj916jpyva1sagaaz].[none:continent:nk]'>
            <groupfilter function='level-members' level='[none:continent:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0amvl9o0fahfj916jpyva1sagaaz].[none:total_deaths:nk]'>
            <groupfilter function='level-members' level='[none:total_deaths:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.0amvl9o0fahfj916jpyva1sagaaz].[sum:new_cases:qk]' included-values='non-null' />
          <slices>
            <column>[federated.0amvl9o0fahfj916jpyva1sagaaz].[:Measure Names]</column>
            <column>[federated.0amvl9o0fahfj916jpyva1sagaaz].[none:continent:nk]</column>
            <column>[federated.0amvl9o0fahfj916jpyva1sagaaz].[none:Location:nk]</column>
            <column>[federated.0amvl9o0fahfj916jpyva1sagaaz].[none:total_deaths:nk]</column>
            <column>[federated.0amvl9o0fahfj916jpyva1sagaaz].[sum:new_cases:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0amvl9o0fahfj916jpyva1sagaaz].[tmn:date:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.0amvl9o0fahfj916jpyva1sagaaz].[max:total_cases:qk]' scope='rows' value='Total Cases' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
          <style-rule element='data-highlighter-title'>
            <format attr='title' field='[federated.0amvl9o0fahfj916jpyva1sagaaz].[none:Location:nk]' value='Highlight Location' />
          </style-rule>
        </style>
        <panes>
          <pane id='10' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0amvl9o0fahfj916jpyva1sagaaz].[none:Location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='11' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0amvl9o0fahfj916jpyva1sagaaz].[sum:new_cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0amvl9o0fahfj916jpyva1sagaaz].[none:Location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='12' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0amvl9o0fahfj916jpyva1sagaaz].[max:total_cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0amvl9o0fahfj916jpyva1sagaaz].[none:Location:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0amvl9o0fahfj916jpyva1sagaaz].[sum:new_cases:qk] + [federated.0amvl9o0fahfj916jpyva1sagaaz].[max:total_cases:qk])</rows>
        <cols>[federated.0amvl9o0fahfj916jpyva1sagaaz].[tmn:date:qk]</cols>
      </table>
      <simple-id uuid='{D1276A53-5038-4193-AC9D-A5E54D1B4B1E}' />
    </worksheet>
    <worksheet name='Global Covid Cases, Deaths and Percentage'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000' fontname='Bookman Old Style'>Global Covid Cases, Deaths and Percentage</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='CountryWise_DeathPercentage (Portfolio_Project)' name='federated.10xo4w60co4xlq1ck2jae0rqgwve' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.10xo4w60co4xlq1ck2jae0rqgwve'>
            <column caption='Death Percentage' datatype='real' name='[Death_Percentage]' role='measure' type='quantitative' />
            <column datatype='string' name='[Location]' role='dimension' semantic-role='[Country].[Name]' type='nominal' />
            <column caption='Total Cases' datatype='real' name='[Total_Cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[Total_Deaths]' role='measure' type='quantitative' />
            <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
            <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
            <column caption='% Population Covid Infected' datatype='real' name='[ppln_prcnt_got_Covid]' role='measure' type='quantitative' />
            <column-instance column='[Death_Percentage]' derivation='Sum' name='[sum:Death_Percentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total_Cases]' derivation='Sum' name='[sum:Total_Cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total_Deaths]' derivation='Sum' name='[sum:Total_Deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[population]' derivation='Sum' name='[sum:population:qk]' pivot='key' type='quantitative' />
            <column-instance column='[ppln_prcnt_got_Covid]' derivation='Sum' name='[sum:ppln_prcnt_got_Covid:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.10xo4w60co4xlq1ck2jae0rqgwve].[Longitude (generated)]' field-type='quantitative' max='27080350.924327813' min='-24720575.596014522' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.10xo4w60co4xlq1ck2jae0rqgwve].[Latitude (generated)]' field-type='quantitative' max='14426807.312778089' min='-7243246.3513004659' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' value='#f5eddc' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.10xo4w60co4xlq1ck2jae0rqgwve].[sum:Total_Deaths:qk]' min='1000' palette='red_gold_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#f7f1f6' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#dfedeb' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <lod column='[federated.10xo4w60co4xlq1ck2jae0rqgwve].[none:Location:nk]' />
              <lod column='[federated.10xo4w60co4xlq1ck2jae0rqgwve].[sum:population:qk]' />
              <lod column='[federated.10xo4w60co4xlq1ck2jae0rqgwve].[sum:Total_Cases:qk]' />
              <color column='[federated.10xo4w60co4xlq1ck2jae0rqgwve].[sum:Total_Deaths:qk]' />
              <lod column='[federated.10xo4w60co4xlq1ck2jae0rqgwve].[sum:Death_Percentage:qk]' />
              <lod column='[federated.10xo4w60co4xlq1ck2jae0rqgwve].[sum:ppln_prcnt_got_Covid:qk]' />
              <geometry column='[federated.10xo4w60co4xlq1ck2jae0rqgwve].[Geometry (generated)]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Location:&#9;</run>
                <run bold='true'>&lt;[federated.10xo4w60co4xlq1ck2jae0rqgwve].[none:Location:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total Cases:&#9;</run>
                <run bold='true'>&lt;[federated.10xo4w60co4xlq1ck2jae0rqgwve].[sum:Total_Cases:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total Deaths:&#9;</run>
                <run bold='true'>&lt;[federated.10xo4w60co4xlq1ck2jae0rqgwve].[sum:Total_Deaths:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Population:&#9;</run>
                <run bold='true'>&lt;[federated.10xo4w60co4xlq1ck2jae0rqgwve].[sum:population:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>% Population Covid Infected:&#9;</run>
                <run bold='true'>&lt;[federated.10xo4w60co4xlq1ck2jae0rqgwve].[sum:ppln_prcnt_got_Covid:qk]&gt;  %</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Death Percentage:&#9;</run>
                <run bold='true'>&lt;[federated.10xo4w60co4xlq1ck2jae0rqgwve].[sum:Death_Percentage:qk]&gt;  %</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='datalabel'>
                <format attr='color-mode' value='user' />
                <format attr='font-size' value='8' />
                <format attr='color' value='#c0c0c0' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-mode' value='highlight' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.10xo4w60co4xlq1ck2jae0rqgwve].[Latitude (generated)]</rows>
        <cols>[federated.10xo4w60co4xlq1ck2jae0rqgwve].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{71067839-F429-4113-9708-9A7899158761}' />
    </worksheet>
    <worksheet name='Global Numbers'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Bookman Old Style'>Global Numbers</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='World_DeathPercentage (Portfolio_Project)' name='federated.0upbcbn1sd5sej14ktqmc1w3exqt' />
          </datasources>
          <datasource-dependencies datasource='federated.0upbcbn1sd5sej14ktqmc1w3exqt'>
            <column caption='Global Death Percentage' datatype='real' name='[Global_DeathPercentage]' role='measure' type='quantitative' />
            <column caption='Total Cases' datatype='real' name='[Total_Cases]' role='measure' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[Total_Deaths]' role='measure' type='quantitative' />
            <column-instance column='[Global_DeathPercentage]' derivation='Sum' name='[sum:Global_DeathPercentage:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total_Cases]' derivation='Sum' name='[sum:Total_Cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Total_Deaths]' derivation='Sum' name='[sum:Total_Deaths:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0upbcbn1sd5sej14ktqmc1w3exqt].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0upbcbn1sd5sej14ktqmc1w3exqt].[sum:Global_DeathPercentage:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0upbcbn1sd5sej14ktqmc1w3exqt].[sum:Total_Cases:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0upbcbn1sd5sej14ktqmc1w3exqt].[sum:Total_Deaths:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0upbcbn1sd5sej14ktqmc1w3exqt].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0upbcbn1sd5sej14ktqmc1w3exqt].[sum:Total_Cases:qk]&quot;</bucket>
              <bucket>&quot;[federated.0upbcbn1sd5sej14ktqmc1w3exqt].[sum:Total_Deaths:qk]&quot;</bucket>
              <bucket>&quot;[federated.0upbcbn1sd5sej14ktqmc1w3exqt].[sum:Global_DeathPercentage:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0upbcbn1sd5sej14ktqmc1w3exqt].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='stroke-size' scope='rows' value='2' />
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0upbcbn1sd5sej14ktqmc1w3exqt].[:Measure Names]' value='187' />
            <format attr='height' value='49' />
            <format attr='text-format' field='[federated.0upbcbn1sd5sej14ktqmc1w3exqt].[sum:Global_DeathPercentage:qk]' value='n#,##0.000;-#,##0.000' />
            <format attr='text-format' field='[federated.0upbcbn1sd5sej14ktqmc1w3exqt].[Multiple Values]' value='n#,##0;-#,##0' />
            <format attr='color' value='#000000' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#000000' />
            <format attr='border-width' value='1' />
            <format attr='font-size' value='10' />
            <format attr='text-align' value='right' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0upbcbn1sd5sej14ktqmc1w3exqt].[:Measure Names]' value='44' />
            <format attr='width-header' value='352' />
            <format attr='font-size' data-class='total' field='[federated.0upbcbn1sd5sej14ktqmc1w3exqt].[:Measure Names]' value='14' />
            <format attr='font-weight' data-class='total' field='[federated.0upbcbn1sd5sej14ktqmc1w3exqt].[:Measure Names]' value='bold' />
            <format attr='background-color' value='#ddebf0' />
            <format attr='border-style' value='solid' />
            <format attr='border-color' value='#000000' />
          </style-rule>
          <style-rule element='label'>
            <format attr='font-size' scope='cols' value='11' />
            <format attr='text-align' value='center' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='band-color' scope='rows' value='#555555' />
            <format attr='background-color' value='#f2f9f9' />
            <format attr='border-color' value='#000000' />
            <format attr='border-width' value='1' />
            <format attr='border-style' value='solid' />
          </style-rule>
          <style-rule element='table'>
            <format attr='band-size' scope='cols' value='0' />
            <format attr='band-size' scope='rows' value='1' />
            <format attr='background-color' value='#e8edda' />
          </style-rule>
          <style-rule element='refline'>
            <format attr='stroke-color' scope='rows' value='#000000a5' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='line-visibility' scope='rows' value='on' />
            <format attr='line-pattern-only' scope='rows' value='solid' />
            <format attr='stroke-size' scope='rows' value='1' />
            <format attr='stroke-color' scope='rows' value='#000000' />
          </style-rule>
          <style-rule element='zeroline'>
            <format attr='stroke-size' scope='rows' value='2' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-color' scope='cols' value='#000000' />
            <format attr='line-visibility' scope='cols' value='on' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-color' scope='rows' value='#000000' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <text column='[federated.0upbcbn1sd5sej14ktqmc1w3exqt].[Multiple Values]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run>&lt;</run>
                <run>[federated.0upbcbn1sd5sej14ktqmc1w3exqt].[Multiple Values]</run>
                <run>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='left' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='size' value='1.9010497331619263' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.0upbcbn1sd5sej14ktqmc1w3exqt].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{D2EED5B4-8FC9-421A-A255-A75283F3901E}' />
    </worksheet>
    <worksheet name='USA Hospitals, ICU and Deaths'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Bookman Old Style'>USA Hospitals, ICU and Deaths</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='USA_Hospital_ICU_Admn (Portfolio_Project) (2)' name='federated.0fwkpys0fhs2ne1403ele1qcr5a4' />
          </datasources>
          <datasource-dependencies datasource='federated.0fwkpys0fhs2ne1403ele1qcr5a4'>
            <column caption='Patients in Hospitals' datatype='integer' name='[Currently_hospital_patients]' role='measure' type='quantitative' />
            <column caption='Patients in ICU' datatype='integer' name='[Currently_patients_in_icu]' role='measure' type='quantitative' />
            <column caption='Date' datatype='datetime' name='[date]' role='dimension' type='ordinal' />
            <column caption='Hospital In-Out' datatype='integer' name='[hospital_in_out]' role='measure' type='quantitative' />
            <column caption='ICU In-Out' datatype='integer' name='[icu_in_out]' role='measure' type='quantitative' />
            <column-instance column='[Currently_hospital_patients]' derivation='Sum' name='[sum:Currently_hospital_patients:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Currently_patients_in_icu]' derivation='Sum' name='[sum:Currently_patients_in_icu:qk]' pivot='key' type='quantitative' />
            <column-instance column='[hospital_in_out]' derivation='Sum' name='[sum:hospital_in_out:qk]' pivot='key' type='quantitative' />
            <column-instance column='[icu_in_out]' derivation='Sum' name='[sum:icu_in_out:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_deaths]' derivation='Sum' name='[sum:total_deaths:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
            <column caption='Total Deaths' datatype='integer' name='[total_deaths]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0fwkpys0fhs2ne1403ele1qcr5a4].[sum:Currently_patients_in_icu:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='title' class='0' field='[federated.0fwkpys0fhs2ne1403ele1qcr5a4].[tdy:date:qk]' scope='cols' value='' />
            <format attr='title' class='0' field='[federated.0fwkpys0fhs2ne1403ele1qcr5a4].[sum:Currently_hospital_patients:qk]' scope='rows' value='Patients in Hospitals' />
            <format attr='title' class='0' field='[federated.0fwkpys0fhs2ne1403ele1qcr5a4].[sum:Currently_patients_in_icu:qk]' scope='rows' value='Patients in ICU' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' value='#f3ebf3' />
            <format attr='band-color' scope='rows' value='#f3ebf3' />
            <format attr='band-color' scope='cols' value='#f3ebf3' />
          </style-rule>
          <style-rule element='label'>
            <format attr='color' field='[federated.0fwkpys0fhs2ne1403ele1qcr5a4].[sum:Currently_hospital_patients:qk]' value='#aa0000' />
            <format attr='font-size' field='[federated.0fwkpys0fhs2ne1403ele1qcr5a4].[sum:Currently_hospital_patients:qk]' value='10' />
            <format attr='font-family' field='[federated.0fwkpys0fhs2ne1403ele1qcr5a4].[sum:Currently_hospital_patients:qk]' value='Bookman Old Style' />
            <format attr='font-weight' field='[federated.0fwkpys0fhs2ne1403ele1qcr5a4].[sum:Currently_hospital_patients:qk]' value='bold' />
            <format attr='font-size' field='[federated.0fwkpys0fhs2ne1403ele1qcr5a4].[sum:Currently_patients_in_icu:qk]' value='10' />
            <format attr='font-family' field='[federated.0fwkpys0fhs2ne1403ele1qcr5a4].[sum:Currently_patients_in_icu:qk]' value='Bookman Old Style' />
            <format attr='font-weight' field='[federated.0fwkpys0fhs2ne1403ele1qcr5a4].[sum:Currently_patients_in_icu:qk]' value='bold' />
            <format attr='color' field='[federated.0fwkpys0fhs2ne1403ele1qcr5a4].[sum:Currently_patients_in_icu:qk]' value='#4e79a7' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#dfedeb' />
            <format attr='band-color' scope='rows' value='#aa0000' />
            <format attr='band-color' scope='cols' value='#f3ebf3' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#f9e9e0' />
            <format attr='band-size' scope='rows' value='0' />
            <format attr='band-size' scope='cols' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0fwkpys0fhs2ne1403ele1qcr5a4].[:Measure Names]' />
              <lod column='[federated.0fwkpys0fhs2ne1403ele1qcr5a4].[sum:total_deaths:qk]' />
            </encodings>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0fwkpys0fhs2ne1403ele1qcr5a4].[sum:Currently_hospital_patients:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0fwkpys0fhs2ne1403ele1qcr5a4].[:Measure Names]' />
              <lod column='[federated.0fwkpys0fhs2ne1403ele1qcr5a4].[sum:total_deaths:qk]' />
              <lod column='[federated.0fwkpys0fhs2ne1403ele1qcr5a4].[sum:hospital_in_out:qk]' />
            </encodings>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0fwkpys0fhs2ne1403ele1qcr5a4].[sum:Currently_patients_in_icu:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0fwkpys0fhs2ne1403ele1qcr5a4].[:Measure Names]' />
              <lod column='[federated.0fwkpys0fhs2ne1403ele1qcr5a4].[sum:total_deaths:qk]' />
              <lod column='[federated.0fwkpys0fhs2ne1403ele1qcr5a4].[sum:icu_in_out:qk]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0fwkpys0fhs2ne1403ele1qcr5a4].[sum:Currently_hospital_patients:qk] + [federated.0fwkpys0fhs2ne1403ele1qcr5a4].[sum:Currently_patients_in_icu:qk])</rows>
        <cols>[federated.0fwkpys0fhs2ne1403ele1qcr5a4].[tdy:date:qk]</cols>
      </table>
      <simple-id uuid='{1135D459-0F75-4213-A041-3160B3424861}' />
    </worksheet>
    <worksheet name='USA Vaccination Drive'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Bookman Old Style'>USA Vaccination Drive</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='USA_fst2ndBoosterVaccinations (Portfolio_Project)' name='federated.1sq6ctv0b52ywq10pn3xg1w7rqaw' />
          </datasources>
          <datasource-dependencies datasource='federated.1sq6ctv0b52ywq10pn3xg1w7rqaw'>
            <column caption='Date' datatype='datetime' name='[date]' role='dimension' type='ordinal' />
            <column caption='Daily Boosters Dose' datatype='integer' name='[each_day_boosters_dose]' role='measure' type='quantitative' />
            <column caption='Daily 1st Dose' datatype='integer' name='[each_day_with_1st_dose]' role='measure' type='quantitative' />
            <column caption='Daily 2nd Dose' datatype='integer' name='[each_day_with_2nd_dose]' role='measure' type='quantitative' />
            <column caption='People Fully Vaccinated' datatype='integer' datatype-customized='true' name='[people_fully_vaccinated]' role='measure' type='quantitative' />
            <column-instance column='[each_day_boosters_dose]' derivation='Sum' name='[sum:each_day_boosters_dose:qk]' pivot='key' type='quantitative' />
            <column-instance column='[each_day_with_1st_dose]' derivation='Sum' name='[sum:each_day_with_1st_dose:qk]' pivot='key' type='quantitative' />
            <column-instance column='[each_day_with_2nd_dose]' derivation='Sum' name='[sum:each_day_with_2nd_dose:qk]' pivot='key' type='quantitative' />
            <column-instance column='[people_fully_vaccinated]' derivation='Sum' name='[sum:people_fully_vaccinated:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_boosters]' derivation='Sum' name='[sum:total_boosters:qk]' pivot='key' type='quantitative' />
            <column-instance column='[total_people_vaccinated_with_1st_dose]' derivation='Sum' name='[sum:total_people_vaccinated_with_1st_dose:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:qk]' pivot='key' type='quantitative' />
            <column caption='Total Boosters' datatype='integer' datatype-customized='true' name='[total_boosters]' role='measure' type='quantitative' />
            <column caption='Total 1St Dose Vaccination' datatype='integer' name='[total_people_vaccinated_with_1st_dose]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.1sq6ctv0b52ywq10pn3xg1w7rqaw].[tdy:date:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='header'>
            <format attr='background-color' value='#dfedeb' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='background-color' value='#b4b4b4' />
          </style-rule>
          <style-rule element='table'>
            <format attr='omit-on-special' field='[federated.1sq6ctv0b52ywq10pn3xg1w7rqaw].[sum:each_day_with_1st_dose:qk]' value='false' />
            <format attr='break-on-special' field='[federated.1sq6ctv0b52ywq10pn3xg1w7rqaw].[sum:each_day_with_1st_dose:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1sq6ctv0b52ywq10pn3xg1w7rqaw].[sum:each_day_with_1st_dose:qk]' value='false' />
            <format attr='background-color' value='#dfedeb' />
            <format attr='omit-on-special' field='[federated.1sq6ctv0b52ywq10pn3xg1w7rqaw].[sum:each_day_boosters_dose:qk]' value='false' />
            <format attr='break-on-special' field='[federated.1sq6ctv0b52ywq10pn3xg1w7rqaw].[sum:each_day_boosters_dose:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1sq6ctv0b52ywq10pn3xg1w7rqaw].[sum:each_day_boosters_dose:qk]' value='false' />
            <format attr='omit-on-special' field='[federated.1sq6ctv0b52ywq10pn3xg1w7rqaw].[sum:each_day_with_2nd_dose:qk]' value='false' />
            <format attr='break-on-special' field='[federated.1sq6ctv0b52ywq10pn3xg1w7rqaw].[sum:each_day_with_2nd_dose:qk]' value='false' />
            <format attr='show-null-value-warning' field='[federated.1sq6ctv0b52ywq10pn3xg1w7rqaw].[sum:each_day_with_2nd_dose:qk]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Day of Date:&#9;</run>
                <run bold='true'>&lt;[federated.1sq6ctv0b52ywq10pn3xg1w7rqaw].[tdy:date:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Daily 1st Dose:&#9;</run>
                <run bold='true'>&lt;[federated.1sq6ctv0b52ywq10pn3xg1w7rqaw].[sum:each_day_with_1st_dose:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Daily 2nd Dose:&#9;</run>
                <run bold='true'>&lt;[federated.1sq6ctv0b52ywq10pn3xg1w7rqaw].[sum:each_day_with_2nd_dose:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Daily Boosters Dose:&#9;</run>
                <run bold='true'>&lt;[federated.1sq6ctv0b52ywq10pn3xg1w7rqaw].[sum:each_day_boosters_dose:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1sq6ctv0b52ywq10pn3xg1w7rqaw].[sum:each_day_boosters_dose:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <tooltip column='[federated.1sq6ctv0b52ywq10pn3xg1w7rqaw].[sum:total_boosters:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontcolor='#787878'>Day of Date:&#9;</run>
                <run bold='true'>&lt;[federated.1sq6ctv0b52ywq10pn3xg1w7rqaw].[tdy:date:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878'>Daily 1st Dose:&#9;</run>
                <run bold='true'>&lt;[federated.1sq6ctv0b52ywq10pn3xg1w7rqaw].[sum:each_day_with_1st_dose:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878'>Daily 2nd Dose:&#9;</run>
                <run bold='true'>&lt;[federated.1sq6ctv0b52ywq10pn3xg1w7rqaw].[sum:each_day_with_2nd_dose:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run bold='true' fontcolor='#787878'>Daily Boosters Dose:&#9;</run>
                <run bold='true'>&lt;[federated.1sq6ctv0b52ywq10pn3xg1w7rqaw].[sum:each_day_boosters_dose:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#90e7e8' />
                <format attr='mark-transparency' value='255' />
                <format attr='has-stroke' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1sq6ctv0b52ywq10pn3xg1w7rqaw].[sum:each_day_with_1st_dose:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <tooltip column='[federated.1sq6ctv0b52ywq10pn3xg1w7rqaw].[sum:total_people_vaccinated_with_1st_dose:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Day of Date:&#9;</run>
                <run bold='true'>&lt;[federated.1sq6ctv0b52ywq10pn3xg1w7rqaw].[tdy:date:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Daily 1st Dose:&#9;</run>
                <run bold='true'>&lt;[federated.1sq6ctv0b52ywq10pn3xg1w7rqaw].[sum:each_day_with_1st_dose:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Daily 2nd Dose:&#9;</run>
                <run bold='true'>&lt;[federated.1sq6ctv0b52ywq10pn3xg1w7rqaw].[sum:each_day_with_2nd_dose:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Daily Boosters Dose:&#9;</run>
                <run bold='true'>&lt;[federated.1sq6ctv0b52ywq10pn3xg1w7rqaw].[sum:each_day_boosters_dose:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#4e79a7' />
                <format attr='mark-transparency' value='255' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.1sq6ctv0b52ywq10pn3xg1w7rqaw].[sum:each_day_with_2nd_dose:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Area' />
            <encodings>
              <tooltip column='[federated.1sq6ctv0b52ywq10pn3xg1w7rqaw].[sum:people_fully_vaccinated:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Day of Date:&#9;</run>
                <run bold='true'>&lt;[federated.1sq6ctv0b52ywq10pn3xg1w7rqaw].[tdy:date:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Daily 1st Dose:&#9;</run>
                <run bold='true'>&lt;[federated.1sq6ctv0b52ywq10pn3xg1w7rqaw].[sum:each_day_with_1st_dose:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Daily 2nd Dose:&#9;</run>
                <run bold='true'>&lt;[federated.1sq6ctv0b52ywq10pn3xg1w7rqaw].[sum:each_day_with_2nd_dose:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Daily Boosters Dose:&#9;</run>
                <run bold='true'>&lt;[federated.1sq6ctv0b52ywq10pn3xg1w7rqaw].[sum:each_day_boosters_dose:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#00aaff' />
                <format attr='mark-transparency' value='255' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.1sq6ctv0b52ywq10pn3xg1w7rqaw].[sum:each_day_with_1st_dose:qk] + ([federated.1sq6ctv0b52ywq10pn3xg1w7rqaw].[sum:each_day_with_2nd_dose:qk] + [federated.1sq6ctv0b52ywq10pn3xg1w7rqaw].[sum:each_day_boosters_dose:qk]))</rows>
        <cols>[federated.1sq6ctv0b52ywq10pn3xg1w7rqaw].[tdy:date:qk]</cols>
      </table>
      <simple-id uuid='{BFC25E99-7752-4BF4-BC97-05B2C1539679}' />
    </worksheet>
    <worksheet name='Vaccination Drive in Top 10 Countries'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Bookman Old Style'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='PopulationVaccinated (Portfolio_Project)' name='federated.0fvqzl910dgxcx15vze020578xuf' />
          </datasources>
          <datasource-dependencies datasource='federated.0fvqzl910dgxcx15vze020578xuf'>
            <column caption='Date' datatype='datetime' name='[date]' role='dimension' type='ordinal' />
            <column caption='Location' datatype='string' name='[location]' role='dimension' type='nominal' />
            <column-instance column='[population]' derivation='Max' name='[max:population:qk]' pivot='key' type='quantitative' />
            <column caption='New Vaccinations' datatype='integer' datatype-customized='true' name='[new_vaccinations]' role='measure' type='quantitative' />
            <column-instance column='[location]' derivation='None' name='[none:location:nk]' pivot='key' type='nominal' />
            <column-instance column='[new_vaccinations]' derivation='None' name='[none:new_vaccinations:ok]' pivot='key' type='ordinal' />
            <column caption='Population' datatype='real' name='[population]' role='measure' type='quantitative' />
            <column-instance column='[new_vaccinations]' derivation='Sum' name='[sum:new_vaccinations:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Month-Trunc' name='[tmn:date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0fvqzl910dgxcx15vze020578xuf].[none:location:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Brazil&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;China&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;France&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Germany&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;India&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Italy&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Mexico&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;Russia&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United Kingdom&quot;' />
              <groupfilter function='member' level='[none:location:nk]' member='&quot;United States&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0fvqzl910dgxcx15vze020578xuf].[none:new_vaccinations:ok]'>
            <groupfilter from='0' function='range' level='[none:new_vaccinations:ok]' to='24741000' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0fvqzl910dgxcx15vze020578xuf].[none:new_vaccinations:ok]</column>
            <column>[federated.0fvqzl910dgxcx15vze020578xuf].[none:location:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0fvqzl910dgxcx15vze020578xuf].[tmn:date:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0fvqzl910dgxcx15vze020578xuf].[none:location:nk]' />
              <tooltip column='[federated.0fvqzl910dgxcx15vze020578xuf].[max:population:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Location:&#9;</run>
                <run bold='true'>&lt;[federated.0fvqzl910dgxcx15vze020578xuf].[none:location:nk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Max. Population:&#9;</run>
                <run bold='true'>&lt;[federated.0fvqzl910dgxcx15vze020578xuf].[max:population:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Month of Date:&#9;</run>
                <run bold='true'>&lt;[federated.0fvqzl910dgxcx15vze020578xuf].[tmn:date:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>New Vaccinations:&#9;</run>
                <run bold='true'>&lt;[federated.0fvqzl910dgxcx15vze020578xuf].[sum:new_vaccinations:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0fvqzl910dgxcx15vze020578xuf].[sum:new_vaccinations:qk]</rows>
        <cols>[federated.0fvqzl910dgxcx15vze020578xuf].[tmn:date:qk]</cols>
      </table>
      <simple-id uuid='{07B125AC-1B70-4691-B793-CF17C97D2800}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='COVID_19'>
      <style />
      <size maxheight='768' maxwidth='1366' minheight='768' minwidth='1366' preset-index='0' sizing-mode='fixed' />
      <datasources>
        <datasource caption='daily_CasesPoulationDeaths (Portfolio_Project)' name='federated.0amvl9o0fahfj916jpyva1sagaaz' />
      </datasources>
      <datasource-dependencies datasource='federated.0amvl9o0fahfj916jpyva1sagaaz'>
        <column caption='Location' datatype='string' name='[Location]' role='dimension' type='nominal' />
        <column caption='Continent' datatype='string' name='[continent]' role='dimension' type='nominal' />
        <column-instance column='[Location]' derivation='None' name='[none:Location:nk]' pivot='key' type='nominal' />
        <column-instance column='[continent]' derivation='None' name='[none:continent:nk]' pivot='key' type='nominal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='97916' id='7' param='horz' type='layout-flow' w='98828' x='586' y='1042'>
            <zone h='97916' id='5' type='layout-basic' w='87115' x='586' y='1042'>
              <zone h='38932' id='3' name='Global Covid Cases, Deaths and Percentage' w='44582' x='43119' y='60026'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='33333' id='9' name='Country-wise  Monthy Counts of COVID cases ' w='44582' x='43119' y='1042'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='19010' id='13' name='Global Numbers' w='42533' x='586' y='1042'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='38932' id='14' name='USA Hospitals, ICU and Deaths' w='42533' x='586' y='60026'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='39974' id='16' name='USA Vaccination Drive' w='42533' x='586' y='20052'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='25651' id='17' name='Vaccination Drive in Top 10 Countries' w='44582' x='43119' y='34375'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone fixed-size='160' h='97916' id='6' is-fixed='true' param='vert' type='layout-flow' w='11713' x='87701' y='1042'>
              <zone fixed-size='65' h='9506' id='10' is-fixed='true' mode='dropdown' name='Country-wise  Monthy Counts of COVID cases ' param='[federated.0amvl9o0fahfj916jpyva1sagaaz].[none:Location:nk]' type='filter' w='11713' x='87701' y='1042'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='62' h='9115' id='11' is-fixed='true' mode='dropdown' name='Country-wise  Monthy Counts of COVID cases ' param='[federated.0amvl9o0fahfj916jpyva1sagaaz].[none:continent:nk]' type='filter' w='11713' x='87701' y='10548'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='67' h='9766' id='12' is-fixed='true' name='Country-wise  Monthy Counts of COVID cases ' param='[federated.0amvl9o0fahfj916jpyva1sagaaz].[none:Location:nk]' type='highlighter' w='11713' x='87701' y='19663'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='208' h='28125' id='18' is-fixed='true' name='Vaccination Drive in Top 10 Countries' pane-specification-id='3' param='[federated.0fvqzl910dgxcx15vze020578xuf].[none:location:nk]' type='color' w='11713' x='87701' y='29429'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8594' id='15' name='USA Hospitals, ICU and Deaths' pane-specification-id='1' param='[federated.0fwkpys0fhs2ne1403ele1qcr5a4].[:Measure Names]' type='color' w='11713' x='87701' y='57554'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='8464' id='8' name='Global Covid Cases, Deaths and Percentage' pane-specification-id='0' param='[federated.10xo4w60co4xlq1ck2jae0rqgwve].[sum:Total_Deaths:qk]' type='color' w='11713' x='87701' y='66148'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1900' minheight='1900' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='49' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='97916' id='50' param='vert' type='layout-flow' w='98828' x='586' y='1042'>
                <zone fixed-size='138' h='19010' id='13' is-fixed='true' name='Global Numbers' w='42533' x='586' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='65' h='9506' id='10' mode='dropdown' name='Country-wise  Monthy Counts of COVID cases ' param='[federated.0amvl9o0fahfj916jpyva1sagaaz].[none:Location:nk]' type='filter' w='11713' x='87701' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='62' h='9115' id='11' mode='dropdown' name='Country-wise  Monthy Counts of COVID cases ' param='[federated.0amvl9o0fahfj916jpyva1sagaaz].[none:continent:nk]' type='filter' w='11713' x='87701' y='10548'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='67' h='9766' id='12' name='Country-wise  Monthy Counts of COVID cases ' param='[federated.0amvl9o0fahfj916jpyva1sagaaz].[none:Location:nk]' type='highlighter' w='11713' x='87701' y='19663'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='248' h='33333' id='9' is-fixed='true' name='Country-wise  Monthy Counts of COVID cases ' w='44582' x='43119' y='1042'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='39974' id='16' is-fixed='true' name='USA Vaccination Drive' w='42533' x='586' y='20052'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='189' h='25651' id='17' is-fixed='true' name='Vaccination Drive in Top 10 Countries' w='44582' x='43119' y='34375'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='208' h='28125' id='18' name='Vaccination Drive in Top 10 Countries' pane-specification-id='3' param='[federated.0fvqzl910dgxcx15vze020578xuf].[none:location:nk]' type='color' w='11713' x='87701' y='29429'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38932' id='14' is-fixed='true' name='USA Hospitals, ICU and Deaths' w='42533' x='586' y='60026'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8594' id='15' name='USA Hospitals, ICU and Deaths' pane-specification-id='1' param='[federated.0fwkpys0fhs2ne1403ele1qcr5a4].[:Measure Names]' type='color' w='11713' x='87701' y='57554'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38932' id='3' is-fixed='true' name='Global Covid Cases, Deaths and Percentage' w='44582' x='43119' y='60026'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='8464' id='8' name='Global Covid Cases, Deaths and Percentage' pane-specification-id='0' param='[federated.10xo4w60co4xlq1ck2jae0rqgwve].[sum:Total_Deaths:qk]' type='color' w='11713' x='87701' y='66148'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{8A17613A-5079-4D43-9C93-1811E89B5678}' />
    </dashboard>
  </dashboards>
  <windows source-height='135'>
    <window class='worksheet' name='Country-wise  Monthy Counts of COVID cases '>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0amvl9o0fahfj916jpyva1sagaaz].[none:Location:nk]' type='filter' />
            <card param='[federated.0amvl9o0fahfj916jpyva1sagaaz].[none:continent:nk]' type='filter' />
            <card param='[federated.0amvl9o0fahfj916jpyva1sagaaz].[none:Location:nk]' type='highlighter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <axis>[federated.0amvl9o0fahfj916jpyva1sagaaz].[max:total_cases:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0amvl9o0fahfj916jpyva1sagaaz].[none:Calculation_163536985848217600:qk]</field>
            <field>[federated.0amvl9o0fahfj916jpyva1sagaaz].[none:Location:nk]</field>
            <field>[federated.0amvl9o0fahfj916jpyva1sagaaz].[none:total_deaths:nk]</field>
            <field>[federated.0amvl9o0fahfj916jpyva1sagaaz].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A282D2C7-A0D1-4AF3-BC7D-4ACDC41F0A62}' />
    </window>
    <window class='worksheet' name='Global Numbers'>
      <cards>
        <edge name='left'>
          <strip size='123'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0upbcbn1sd5sej14ktqmc1w3exqt].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{AE3AA95A-37CF-4F7E-85F9-93D89547362B}' />
    </window>
    <window class='worksheet' name='Global Covid Cases, Deaths and Percentage'>
      <cards>
        <edge name='left'>
          <strip size='190'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.10xo4w60co4xlq1ck2jae0rqgwve].[sum:Total_Deaths:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.10xo4w60co4xlq1ck2jae0rqgwve].[none:Location:nk]</field>
            <field>[federated.10xo4w60co4xlq1ck2jae0rqgwve].[sum:Total_Deaths:qk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{E7F5A5DF-7227-4B36-841F-4C0B17BCE8D1}' />
    </window>
    <window class='worksheet' name='USA Hospitals, ICU and Deaths'>
      <cards>
        <edge name='left'>
          <strip size='212'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0fwkpys0fhs2ne1403ele1qcr5a4].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0fwkpys0fhs2ne1403ele1qcr5a4].[:Measure Names]</field>
            <field>[federated.0fwkpys0fhs2ne1403ele1qcr5a4].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{668EBD79-F90A-4C79-85E4-48C397630291}' />
    </window>
    <window class='worksheet' name='USA Vaccination Drive'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sq6ctv0b52ywq10pn3xg1w7rqaw].[none:people_fully_vaccinated:ok]</field>
            <field>[federated.1sq6ctv0b52ywq10pn3xg1w7rqaw].[none:total_boosters:ok]</field>
            <field>[federated.1sq6ctv0b52ywq10pn3xg1w7rqaw].[none:total_people_vaccinated_with_1st_dose:ok]</field>
            <field>[federated.1sq6ctv0b52ywq10pn3xg1w7rqaw].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9C202A05-8D97-47BC-A4A2-16086680300D}' />
    </window>
    <window class='worksheet' name='Vaccination Drive in Top 10 Countries'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.0fvqzl910dgxcx15vze020578xuf].[none:location:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0fvqzl910dgxcx15vze020578xuf].[none:continent:nk]</field>
            <field>[federated.0fvqzl910dgxcx15vze020578xuf].[none:new_vaccinations:ok]</field>
            <field>[federated.0fvqzl910dgxcx15vze020578xuf].[yr:date:ok]</field>
            <field>[federated.1vi1hp81euhdff18rltyu146oiny].[:Measure Names]</field>
            <field>[federated.1vi1hp81euhdff18rltyu146oiny].[none:Location:nk]</field>
            <field>[federated.1vi1hp81euhdff18rltyu146oiny].[none:new_vaccinations:nk]</field>
            <field>[federated.1vi1hp81euhdff18rltyu146oiny].[none:new_vaccinations:ok]</field>
            <field>[federated.1vi1hp81euhdff18rltyu146oiny].[tdy:date:ok]</field>
            <field>[federated.1vi1hp81euhdff18rltyu146oiny].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CCF74AE4-81FE-4DA5-A1A3-3E71EE71C2FC}' />
    </window>
    <window class='dashboard' maximized='true' name='COVID_19'>
      <viewpoints>
        <viewpoint name='Country-wise  Monthy Counts of COVID cases '>
          <zoom type='entire-view' />
          <highlight field='[federated.0amvl9o0fahfj916jpyva1sagaaz].[none:Location:nk]' type='highlight'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='Global Covid Cases, Deaths and Percentage'>
          <zoom type='entire-view' />
          <default-map-tool-selection tool='1' />
        </viewpoint>
        <viewpoint name='Global Numbers' />
        <viewpoint name='USA Hospitals, ICU and Deaths'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='vertical'>
                <node-reference>
                  <axis>[federated.0fwkpys0fhs2ne1403ele1qcr5a4].[sum:Currently_patients_in_icu:qk]</axis>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
          <highlight>
            <color-one-way>
              <field>[federated.0fwkpys0fhs2ne1403ele1qcr5a4].[:Measure Names]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='USA Vaccination Drive'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Vaccination Drive in Top 10 Countries'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{C8C5262C-6B76-440E-A1B1-860A78F69818}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='COVID_19' width='192'>
      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
      qQAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Country-wise  Monthy Counts of COVID cases ' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3d6ZOcx33g+W8+R91VXd3V94FG4wYIErwFkrpMWbJkyZasXY88M/IcjvXs
      RuxsxO5MzMbu/g0bsREbOy92Y2ImJnyMZkcey5ZnJYuWJfECCRIHCRIAcXSj0Uf1WffxXJm5
      L6oBgjIJNoDqBoTOT0Sj0NVPPZlVlb8n83mePITWWmMYO5R1vzNgGPeTCQBjR3Nu/aVSqRAE
      wbZmIAgCYrHYtqZpGDeI+30OsLKywuDg4P3MgrGDmSaQsaOZADB2tO4FgNYszlzg5V+8QrHc
      ojhzgVdeO0nNl5w7eYJ6pNFBmVfeONe1JA3jXjmfvslmadJ9ozw/PMi5C1eRtssThyeYvb6I
      kjXm5kr0+vNUtvkk2zBup3s1gBA4yufC9BpHDo4RT6dJJDNoFRDLjSCbS6yFFkMpG4AoigjD
      sGvJG8bd6FoAaCU5ffo0SgWs1iPCtTlOv3uORKYPYTnkVJmW248lOts7joPrut1K3jDuStcu
      g2qtqVfLBJEikcoStyWNdkRPTw4ZBgg0ynLQMiIej998nbkMatxPXTsHEEKQy/d95LnejXJu
      3Xqjy7G7laRh3DNzGdTY0UwAGDuaCQBjRzMBYOxoJgCMHc0EgLGjmQAwdjQTAMaOZgLA2NFM
      ABg7mgkAY0czAWDsaCYAjB2tiwGgCf0Wa+UaGqiVlpmenqHa9FlfWSbSgA5ZWl7vXpKGcY+6
      OiZ4uVhkZuYaoJm5fBVhO1hCcOnMy8yu+7QWr/DSW+e7lqRh3KsuDom0GN+9l2zSBULajSZz
      8wsEUtMzupfW8izTawH7hlOAGRJpPBi6OCj+FlJw4OnjxKMaF2bnyDgJ3GCdij2ME5U7CTtb
      k7Rh3InulUKtuPDOWyyuN4jcDD26yvk1j8cef5ygWSGme8g6eZSX6FqShnGvzNSIxo5mLoMa
      O5oJAGNHMwFg7GibOAn2OPXm+6zPv4+z+7O8+NSerc+VYWyTTdQAPqdf/gXrdoLK/PLW58gw
      ttEmaoAcjxzdhd0/iUyYqzXGw2UTNUCVi1cWaVabFK/Mb32ODGMbbSIAchw6OMK5d99lz7ED
      W58jw9hGmzoHsFO72D+eYXW1svU5MoxttIkACDn76s+oxrLUTVdm4yGzia4QmvWleapNDzvd
      z+Rwb1czYLpCGPfTJq4CNfjBn/wxkZtn+Njnuh4AhnE/baIJZDM4sYd4zKdVa259jgxjG922
      BggaJaZXWnzj7/09aktXmW1ktitfhrEtblsD1NfnWVyugYZMNsYH56998sZa06qucml6AY2m
      vDTDibfewZeay++dw9MarZq8c+5yl9+CYdy929YAfaP7aZ/8Pn/yp2fx2y0+//Xv3GZrTaMd
      EbSrEOW5vNDg8GSeyzOLRJVZZuYnGfSvcWXV41iX34Rh3K3bBoBwk3z9d79LFEksy8a6scTj
      x25sMTg8QqlcQYcBqXwv2VweUVkmnp8gqi5QVJrx3IfLpN7nsTiGsbkbYVcvXmWtUkOp2xRY
      ramW16iUy9QCTXu9yMzsDHYsi7BdMmqdplPAFp0gMsukGg+CTVwGdRCyyg//9Iek9v8af/83
      nvqE7TTNWoWe3l7qHjxycIrFksf+yUG8VhqbcfqtBDrMdfUNGMa92EQAtPgv3/8hB379t3j2
      sYOfvJmwGJ3cx+gtT+3r6Tym02kAEgDJ2C+/0jDum000gVL85u98naX3fsGPXzOTWhkPl03U
      ABIRz/ON3/tDCnnTfDEeLpsIAM2Jl/6M/sPHCVUP3/ra01ufK8PYJptoAik0NpfOniF0zFUb
      4+Fy2xqgVS3yt3/zOrH+IfRSmVzGnMAaD5fb1gDxdIHnv/BZdo8O0tvXS1+vOQcwHi63DYB2
      dYE/+n/+DbM1i8efeprh3tR25cswtsVtm0BuoofnvvBFQqDVqNFqB9uULcPYHmZyXGNHM5P0
      G/eFVorizAcsT18i1z9Ern+IRDpDIp3FjW/fFPomAIxtp5Xi3Cs/5tzPf0Suf4j2qVdplNeJ
      p1IkMjnSPX3kB0foG5kg1dNHtm+AbF8/lmV3PS8mAIxt1a5XefOvvsfi5ff57H/9T5k4dAyt
      FaHv0yivUl1bprK8SHW1yMKl9wn9NlEQ4CYSfOn3/wf6x3d3NT/mHMDYNpXlBV79/r8jCgNe
      +K/+Cf3jUwjxyWNMlFL4rQatapn3XvlrSkvzfO0P/xWJdLZreTLToxtbTmtN8eoF/vrf/h+4
      iRRf/if/IwMTe25b+AEsyyKZyVEYm+T4b/9DVBRx+qUfoJXqWt62LAAuv/sGP/v5K8yv1Tnz
      6s+ohhrtr/HSL05vVZLGA0jJiItv/Iyf/tH/xeQjT/Clf/TPSef77ng/8VSa5771+1w59RrX
      3nu7a/nbonOACF+leeFzR3Ati1JMMj+7Sk9QJLQlgBkOuQPIKOTNv/oeV069xme+8Xvse+oF
      7HvoTzay5yCPfuFrvPlX36Mwtptc4d6bzltUAwjiVsiJl1/mwuwKsfQQ2lumJG0GEp0zeSkl
      UsqtSd64r7TW1NZX+Jt//39SvHqBr/zBv+DgZ754T4UfQFgWx37tG/T0D/HGX/wxUXDvN2a3
      JgCiCF9JHGdj95ZDTtfwYv3caPY5jmPWCn5IlYtz/PW/+d+JgoCv/MG/YHiqe7OKW7bN8W9+
      l7WFa5w/8dN73t/WXAXSGikjIqWJue5Gc0cDFlorbPvD67nmKtDDQ2vN8swlfv69/5uJQ8d4
      5jd/l1ii+/3HtNZMn32DEz/4I778T/8nhnbvv+t9bU0NIAS24xKPxRBCYFnWzWlVbi38xsPl
      +vkz/O0f/2v2Pn6c57713S0p/ABCCKaOfYbxQ8d44y/+BK9Zv+t9mcugxj3TWjP9zkle+U//
      lgPPfI4nv/LtLblreyvLsjj+2/+AKPQ59eM/Q+u7uzRqAsC4Z1dOv8Zrf/bvOPzcizz5G9/G
      3qZzu0Q6y/Pf/sdMv/Mm186duqt9mAAw7lrnyP8mb/7wP/DYF7/OE1/+1pYf+X/Z8NRBDj//
      JU7+l/9Io3LnC7iYADDuipKSi2/8jBM/+COe+c3vcOzFb2BZ21+chBA8+ZVvk+3r5/X//O+J
      wju7NGoCYIfTWhPdYdcCpSTvvfJjTr/05zzzm9/hwDOf26LcbY5lWTz/rX/E2sIsl99+9Y5e
      ay7E7yBKa5q+z3K9zqXVZd4rFjm/VKQZ+OwfGOS53VM8OjrGUDZL0v34CRBkFHH2p3/JhRN/
      y3Pf/Ifsefz4p/bp2Q49gyM887Xf5eT/9/+SHxylf3wSN5687WtCKU1v0IeZ1pq67zGzXuLq
      +irvF4tMr69SbbcZyGQ5MDjIgYEhCuk07xcXeWdxgblKmfGePMfGxnl0dJRHhkfJJToDVJSS
      nP7JD7h08hd85rf+PnufeO4+v8O/640f/ikfvPFzsoVB+kYmGN1/hOGpgze7TWjZRrbn0GGF
      mUrbBMCvCq01MgxoN2rEkilsx8Wy7Y+cdGqtCaVktlzi9Zlpzi8VmauUiaRitKeHQ0NDHBka
      4eDQENl4glTso0d5LwxZqtU4V1zg7bnrXFheIm47HBoa4onxCZKzHzB/6lU+963vMvnIEwjx
      4LWglVJUVxZZuX6VxSsXWJm9jIoChnf188QLe7H994i8CogYngxMADzolFLU11eYPvsG0++c
      pFFeQylJrn+ITL5AprefzNAY0cAo71frvHX9GnPlMpN9BY6NjvHo6Bi7+/oYyNxZH/rQ97hy
      9SKvnXyNd9dWWU5kablxel2XQxOTPDoyyoHBIfrTafpS6QeiGXQrrTU6qhPWLlK+/H2S8SbK
      7mfmSourF8qs5nbz80SPCYAHkdYaJSOKVy9y6eTLFKcvksrl2fvEc0wefYqg3aS8ssj7Vz7g
      ldlrFBM5mrEE6dBnrFliwm+yf2I3vYUBcoVBktmem8GSzOTglsIqhLjZM7dVq7A8c4m5i++w
      MnuFVr1CrjDEriOP03/gMVSul8urK5wrLnJ1bZWFapVMPM5QJsvjY+PsGxhk38AA/ekMYmPf
      t3uPACgfrXx0VO/8qKDzGNbQqo2WXud32UbYCYQVRziZzo+dQVgxhJMFO4mwkwgnjfKWCEsn
      iGrn0LKFW/gcscLnEW4B3wsoLS/yr0+8Try33wTAg0RrRXV1ievnTzN95hX8xjqDE6PsffQQ
      Q7uGUF4RHVYBwXSpyvVK6eZr9/QV6Lct6usrNKsllAbfg1YLmg1NqwlhBEo7uIkeUrleMr0F
      UrleHDfG4pXzrM3PkMn3UxjfzfjBo4wdOEoqm//E/DZ8n4vLS1xcWebi8hIL1QqlZoueZJKD
      g4NM9Payr3+A8Xwv/UmXhGij/BWi5jSqPY9szXTej7DBcgEHLS1kKJBhDKViKOWiogRKxbCs
      ECcpSfU5WJaHli3QCq0C0CFaRaAjhBXHTk/h9D6Dk3sMy/lwcUelNTPra/wvP/wB/9uXv2oC
      4E4pKamtr6BkRCyRIp5K3/UsBkpGoDuFQrWLlObPUV06j2u3iLmQSFrYrqAeWqwFMVb9GJUw
      xlShn0dHPuUz0xId1VBBGR2UkGGDINCEAXg+tJoarw31OkQqzsCuRxjcfZi+8UMkskMI65Mv
      EEqlCKQklJIgijqPMmK5UWehUuHyygqrpSIOJcbiFfZlAh4vaFKiSTPwKfpJAneC8YGj9Ogh
      /JYkaGr8miRsKyLfQlgO8VyCWDZJPJfASbg0lqo0ilWcpEtmJE9urIfUQAqtfFABWoWggk5N
      EOv/SA1U9zzOLMzxxrUZ3isWsYTgv33hsyYAbkdrTei1aVRLFK9cYPnaJZZmLt34I1orlFKg
      NW4iRSyRJJnO4iaSJNIZ4qkMUeAjowAVtbGFh+u0SCd90skWqVRAImEhpUZpl3h2hJbIM9+0
      eX/d58yKz5LnkIyn2dc/xDOTezg8NMJgNou7iU6FWivQCpBo2UYF6+igggqWUf4aKlhH+Sto
      FSJQgN54jURYLtgpLCcHVgxPJ7iwWqLuecQthS0UjlDYQuMKSdySG89p4pYkbStaUlAOHGZb
      SQJ/EM/LcrHlUFQRMWGTsG1SSpD0JMlIkA2hRzn02jHGC3mcZBzLcaisVllfqWJnksR6MshQ
      oyJNLB4jXcjRt2+Q3Hgfbrwz3iBSiobvsVyvs9Koc3Z+ntPz12kFAQJIWDYxYWEJywTAL5Nh
      SL20SvHqBVauX2V1bpp2vUY638foviMM7NpD/9huEBD6PqHXJgoDAq+F16jiN0sE9SLt6iLI
      Erkc9OQFiSRksg52LIcVH8K3evGsAk0xSKkJ1yohc37A+0tLVNotDg0OcWhomGNj4xwYGCRh
      24RhiFYKy7ZxXPcT77zqsN0p+FqDm0R8TPeETrNBbbS/G0RBhWJllYX1Oa6vXUdHTfJuSCEe
      kLE1w3Ef15agXdAJhEqhdYJIWXiRQ0u6tAONFDZaW3gywXw7xuWWoBiGVKWkFEXEhaDf1gw5
      NsOORd4CrTtHbqlCPBkSSA8ij3gYkgoDHBEihaIlYpTJULWSVESSmkjSFjFs28Z2HZLJOBqN
      F0VUWi00kLYcDidzTMZT9DsxBtw4OdshaVlo1FaNB5CcP/UmC+UWR556nukTP2L/i7/DQDjP
      f/zZNf7BNz9/c9O7DQCtNb+8Zp+++Q9o9EeeFx++ECUlodci8Np4zQZeq0HUblNdKzL/wTla
      9SphENI3PkX/1AEKU/uJpVIox0UqSaQiCjFJzqqjgxV0WEIFayhvGS3baBUQRZK6bzHbTDHf
      SlJuJKm2s9RTORqRjRdJpFJIqbDp3I3NScmjWnBkMMdoX5KEahCF6wg8oqiJdCws5WPZAtdR
      xJzOilO2pdCE6I2Cg1BgCRAC7cbBcRCJDFgWWKLTZNCdI/6NQNFa4UURaLXxWenOiezGYxR1
      Pj7bERtNC+vmZ6o1dN6FIFIuUjkobYFSWCpEaIkOWoSRDyrC0gqhNZaSCPRGN3nRybJjYVsC
      YQHCAscG27r5RWqliCIIFYRS0FY2JZVCqwRCZxDaRmgLbWlilmTQdUnbYAuNtiJsrVFCEjkh
      0vW2JgC0V+Hd2SpHJvJ8MLeOaBVRyQmSQYm5tuTXPvPUzeGQS0tLFAqFD1+rNUopLMv6SBtO
      SnlzbAHAbCVkuhKiNrIv1Y3b+hvba43WnUCQqvMZWkKgo5CgVcfRnbEJUkMErK2XuHj+IlpK
      2gpC0flKXUuD1tha41idKj9pC4SwEKITWLYtbkaY0A6hsql6MfzIwbUlkRLYwsYSYAmJu5EX
      19bALcNCRYhtSWwrAhHxYTRruJuZEESnwH/qZsoCbRFqG6UtlAIlFUGkCRRoJbA2vgtp2dg2
      aFuStAOSlsQRCmnF0fexZ03n2+qkb9tWZ0wK0UbT7mO2Vxql9NZ1hbgRV0KAHe9BhCUaIkHG
      aW08L24+/nJVLoS4+fNxzwPkUy7j2sLZ+IJvFPAPfxcb373m8uoSgYywLEHMsRGFOK7tYFmd
      Ags23lCSgVQcKTtHpG527LJtq7NPLbE+4Qu5QSl1++Vo75FU4Zbt+0ERabdTA92GIyIssWVd
      IRQfnD3JXKnN0aeep72+QEpWWY1PIhrLPHLk8M0tH7RzAGNnMSfBxo724HXmMIxt9JFzgIvz
      RSrN1rZmoNcyE2QZ989HAuBCLWC63N7WDPz2RN40gYz7xjSBjB2tewGgFcV3XuPSyz9htVhm
      +d3Xufjzl6jVPKZ/+uc0fI1uLXDmJ690LUnDuFdduw+gtUJql/7duwlqRaLkCPuf7WNlcYHE
      QB+16/N4wRqpQqfjWHVpAa0UajTzKXs2jK3TvRthGiwbQj9EyRCs1M27o1a8Dx2u44k4iY3Z
      oUPPQ0lpZok27qvuNYGEQPkNastFSA5gN+e5fPIkycIIthsn5QaQHsDZGIbXv3svg3sP3POM
      wYZxL7pWAwjLZvzpF295ZoyRG//t7cwO3APAQLeSNIx7Zq4CGTuaCQBjRzMBYOxoJgCMHc0E
      gLGjmQAwdjQTAMaOZgLA2NFMABg7mgkAY0czAWDsaCYAjB3NBICxo5kAMHa0rgaAVpLI91BK
      o2VEFARo3ZlwVmtAK2T48M9MZvzq6OqY4JX332T27CkatTrzp19j5s2XWV+tMv3S96jUI6LS
      VU7+6OddS9Iw7lX3xgSriFqphB3vxcHH6ptiz2ie5YUVMrv20S7OEkQNBsZ7AZg5+Soyigi/
      +dVuZcEw7lgXJ8cVJPIjjBw6wPUzb+PkRpFhAmG5CDeLFa0TWL24VhWAyaefBzRO4u5WVzGM
      bujikEiHfCHDtbdP0XfwSURlhtn31xh7/FmC8jKudmk7g9DuLNZwY/blB2ttQWOn6V4NIATZ
      8YNkxw92fu9/nN59nf+mkuMApIEbI4MN40FgLoMaO5oJAGNH21QAaKWQgYeUd7FMj2E8wDZx
      DtDi+tvv49dmsQrH2PfE/q3PlWFsk03UABatpas4faPYwkxjaDxcNlEDuCTzKZxEBmXFtz5H
      hrGNNhEAbZpVj4RdRtrmnNl4uGyiRGcYPXqI0GszdGjv1ufIMLbRJgKgSWWpBarGytXZrc+R
      YWyjTTSBHILyHImxSRBbtq62YdwXm6gB4gwdOQKhJJk3q7kYD5dNBECNuTPvIr0Ir+FtfY4M
      YxttIgCS9O8/SOStocxyRsZD5raN+rC2zNpawPDRJxiYHGapKLcrX4axLW5bA6iwTXO9hFYQ
      tWu0as1P3WFzaY5AaoLaKivXZlEaaotzSA1on/LCUrfybhj37LYBEOudIJ8NufTzH3P9aomJ
      o7e/DxA115h/6zXqrTbFyzOIsMLK3DKlSycorbXxFy9z5fzlrr4Bw7gXt20CCcum/9DT9B/6
      9B1prSjNLTKwZwodtnH7RimM9LC8sExicC/h2izrKqJ/IAnA9Bsvd8YE/87XuvJGDONu3DYA
      VOTTrta4cerrJDIk0smP3VbLJpX5OYLaCm6UJq4lfkaiRQJh+7jhOk17DEusAbDn+OcBcBMf
      vz/D2A63D4CgydrVD/AaVQI/oGfPE+w6uPtjt7WcLAd+/euE5WVkZhBVusbSfIWJxx7DryVx
      KJC0cyjfFHjjwXHbAHBSfUw++yTv/ef/hHYyhMGnXwVye4dwAYammBra2E9vAYBOX9LUPWXY
      MLppU+MBkv2j2E5I2DI3woyHy6bGA0w8/TmECJHK9AUyHi6fUqIllevnuHZ6kaEDBWq1NAeP
      H92enBnGNvjUQ7rtxEnkUmgrx+4n9m1Hngxj23zKOYBNdnQ/rlWnvnCFlfm17cmVYWyTTTTq
      PaIoy9ijoyxeK8Heka3PlWF0kdYaGQb4rSa19RVKS3Oszc9QWpy7fQAE1RXaYZyRQ6OUig3G
      H31ku/JsGHdNKYnfalJZXqSyssji5fM0yqs0KiW0UvQMDpMfHGXPsWdvHwBRa43pExdJ9+cA
      qC6vkZoa25Y3YRiboZQkCgLqpRVWZq+yNj/D6twMXrMGGmLJNAMTUxx67kX6RnaRLQzgxuLY
      jgt8al+gOMPHPsPgroGN3+2tf0eGcRtKKdq1CuXlBdYXr7M0fZHK8iJes06mr5/BXXs5/NyL
      9A6NkR8aI5G+/SjG2wZAon+SwYLAdkzBN+4PrTVKRsxdeIfi9EXW5mZolNcJA4++4XEGJ/dx
      8NkvUBidJJ5O48aTCLH5SfdvXwPYDqboG/eLVor5S+9x5qU/p15aY2TPQXY/+jR9I7sY2r0P
      J3bvE7WZW7vGA6myvMi5l3/E9fNnmHzkKT7/nT8kPzja9XRMABgPDK01fqvBB2/+gnMv/4je
      4XF+4w/+JYXx3XfUrLkTJgCMB4JSimvn3uLs3/wlUka88O1/zMThx3Hc2Jam28UA0KgwIPRD
      3FQaZEAYSmLJFJHfxoknESgCPyBmFsYzNmilWJ2b5uxPf8j6wjX2P/N5jjz/JZLZni076t+q
      ewGgFWtX36Pd9LCzI+jqPEEk6Zl6gvLZv6Lw3HfIhjOcPjHH8d/6UteSNX51NSrrvP/qS1x6
      62VG9x7mq//sf6Z3aHvvM3WxBrAYOPg4ldkP0LZF29nN1GiepfkVMuP78JZmCaImA2OdRfLM
      mOCdS0nJwqVznPiLP8Z2Ynzpu/89Q1MHsZ3tb5F3tQlUnr6IO7CbbFJy/dIikR/fWCc4gxWV
      8K1enI11gs2Y4J2psrLI6Zd+wMIH7/HoF77GIy/8+n0tA91bKV4r6isLBMVlWruOkEuGXL84
      zdixZwgqy7gqjuMOQducd+9EURBw6e1XOPvTvyQ/OMrX/tm/ojC2dVd3NqurC2VPPveVW54Z
      Jr+n87/kcKdd1xkNnOtWksavAK01peJ13v7R91lfvM7jL/4Wh47/Gpb9YNxiNYdjY8tEYcj5
      V3/Ce6/+hMLoJF//7/5XegaG73e2PsIEgNF1WmuWpi9y5qUfUC+v8czXfpepY89u+TX9O6W1
      NgFgdI+MIirLC1w5/TqXT73GrsPHePH3/zmJdPZ+Z+0jOh3sPKaXLpsAMO6N1hqtFAuX3+P8
      a3/D6twM+aFRvvB7f8jY/qP3va2vtQY0KB/Zvo6sf0DUmkG2F+nxayYAjLujtaZVLTP97kk+
      OPkLglaTsQNH+ep/8y8pjE0iRPdWFJVKobQmkhKFRiqNVOrD55VEaZBKEkhJK/AJ/QqOXCen
      lhgS1wibM1QDi5pKsxDk0YnH+NyRL5gAMO6M1pq1+Rkuv/0q18+fASF45IUvs/uxZ8jkC594
      WVNrTSsIaIUBDT+g0m5R9do0gwCpFE3fx48imkGAF4WEUn74exiitCaUEqU1UiukVIAkYYX0
      OW0KMZ+845F32kyk2gzGA/riFnZyFCtzlFb213HcAXqdDCNOnHwqhWNZJgCM21NKEQUefqtJ
      qTjHhRN/y+r1aQpju3j2m9+lb9c+lONQ8nyuLsyz3KizXK9TbrWotttU2i0aQUC13SJSCtuy
      sIWFbQlc2ybhuNiWRToWI+44JN0YCcchF48TS8VI20liwiOm68RkBSuqEFMV8k6bgXhAzLZx
      bBfbTiCcDFZiD1Z8ECdzECs5gbCTCGHzSbfaTAAYHxF4bVq1MuWlecpLC6wtXKNcXme5VqMm
      LMJkltSjzzPXU+BnV2epvHeRuu/RCgIy8QT5ZJJ8MkkhnWa0p4cDg4P0JJP0JlOkYzESrkvK
      jZGKxcglElhCo2ULHVZRwRo6WEf6KyhvGR1V0WEFLVsIJ4twe7HcHqzYHkSsDys2gHB7sJws
      ws0hrDsfIGMCYAfRSqGUQskIJSP8dpNmtUx1dYny0jzLc9coV0vUNawKh4qboOEmqCf6EdlR
      3FicTCLBaKaHQiLJwaFhCqk0Q7kc/ekMccchZtu4to1tWZ0TUC1BR2jlo6M6yp9H+Suo+jp+
      sIbyl9HSAzRgIZwUVmIUO7UbK1bASgxhxfo7hduKgXC6evfYBMBD5saUIH6rQatWod2o0aqW
      qZfXaFZKeM067VqFdrNOUynqToJSIk05nqblxKj3ThJPpRnIZBjO5ni6t4+9/QNM9vYxksvh
      bFzV0SpEKw+k1yncahkCDx01kKpN6K+ighI6LKGCCjqqgnCx3CzCySHcPFZiDKfnWKeAxwew
      3D6E5W7r52UC4FeIvrlKZ+fSY7NWoVFao7KySH19hXp5jdrqEr7XIgp8oiAgmcmRyuVJZHtI
      9Q1QSvdwLTvAtbbHSqTQsTijvb080l9gsifJVD7FQAKyriIuQnRUQcsiutEkqNTxoxY6qoEO
      0SrceIxAR4BA2KnOT6wPKz6EndqFFR/Aig1u/C0JdgIhtv/yqL5llVPdecIEwINMKUnQbtGu
      VykvLVBamqe8NE99fYVGZR2tNbFEkmSmh1Suh2zfACN7D5LJ58n2pEnne/DCFtPLsyyU5piv
      XMO1GxzqiXjKlvTGFGMZQcoKQPkgHKi7iGanqRFYLsJKghVDuDksNw+JUSwn15s0+V0AAAsH
      SURBVDm5dHJgxbDcLNjZjRPO7nZu00qhI4mKJFoqkAqtNFpJUBotFVoppB8ilSIII/wwJBAa
      LwxpyYg1HVIVinW/TaXdptpuU2q1qPueCYAHhdYav92kvLRAZXmB2voK6wvXaFZKtGoV3ESS
      /MAIhbFJRvYcoHewj3hM4joB8XgEsobyV9Hh22jpoUsNvDUfpQL22An29mSw+jJgD2C5OYSd
      2WiKbDRJnDTCioGIIew4Qridgt/lJomWEtkOkC2PqOWj/ICo3kb5IZ7n4QchzbaH7/u0goCm
      7xNISVtGtLXEV4o2Gk9LPBSeVrRQhAKkgFBAYIG/8eNYFn1OjIITp8+JkbddJh2XnsQAmbRt
      AqDbbtwZVTJCygglJUpGBO02YeDhNet4jTqtWgWvVe+015t16uV1WtUSlqWIJxP09BcYHsuT
      PzZEb38a12qBqkJ4ARlUiNqSoKFpSKhHFrUoTltnaJCjL7uLTGaEiYFJerND2LYLWCAsQADi
      ro7UWm0cfaUkUopQKSKtiaKItu/TDAJaMqLSbtPwffxak4bXptVq02q2CT2fdrONh0ZphW9p
      QqGQKFqOBgEWCiE0lgAhNK4V4diKGBECcFC4QhITgphlkbM1MTRJyyZpaxKWIOu45NwYWSFJ
      ujG08LAJ0RaARhOiLI1lb2ETyK8sUV5rMrB3L435a2TGd2Pjsz63RmHXr9b0ilopwsAnCnz8
      VoPAaxO0WwReC3/j0avX8L0WQbtF6LcJfY/QaxP4HpHvIaMAxwE3Bq4LsTjEXIjFBOkEDE4K
      cvkEiaRNOuMg9BLtaJ5q6DBddFj1Y6wHMdb8GGvBEGHgEhMZ+nMjDPb0s7fQz0QyTX8mgy0E
      KpLQ1oTtNoFsdpoPAFqjIwlCgZJoKRG6E6Q69FFRRCQlkoBIBbSkj5IhTenhi5BARzS1TyCD
      zo+OkJGHZ0HcVthCE7M6acUtRR+aviTEM6pTgC2NKxQWGsfqFPi4kNii83wciWMpXKFxROcR
      ITbiduPucic6NhrytxRhbQOi09dHbQS4skALpNIILUAL0BZSKkS4VTWAbLM0PUe2N8Xq9SX8
      2bfx44PkgmlmLle6EgCBVDQ/Yc0ypUDecsLzSUK/s+RT5PtIKQmrNbxaBa9ZJ/BatGpVau0a
      sl1ChX6nTR6FeJFCaYusq0BEgMJ1Ox+444DtgB2HZMaikI6TTKZwXYklNNbGgdgWTqe7gAgA
      aAQul1sJ6tU4K77LWmBRCx1CZYHQaAGuVvRLj71BiBMJMm6NbKOOXL5EaHtcQzHvSJKEBJYm
      ISTKFoQWJIjAslCOxhaqU4DsTm3AjYoBblQQaFTnR4AlNHEBCdE5Sg8AHzdjmi9ttBYItVFQ
      ow93LAK7U2C1BdpG2glC7eJrja8FaBuhXUAgI4GUAqXAkhJLSZSiE9SAkjZK3fjub+1yIVBW
      DCUctOz83RI2tuXQ6RKk6PxHoBU4trs1AaDDNm7vCPmNdYLjA3uI1mcpqYhCoTMjxI0xwbWv
      fpFaPnezSlZKIaXEtm0sq/Pm9EY1a1kW9sZluAtrAVcqHx8AFnykivejEMXtF/hbXi5x6q1L
      KHVr4MSA/o2fX0rDsvjILtu33f2nslAIPj1oF4F37y2pv0NrtYmUt48jFNs1UGxLAkA4cYLK
      ddrpEC2SCOvGOsHjf2ed4FxvnlzuzkeJPZnSHBlVn/h365YPMJASzSdvC6CP9PP7x/ew2ZIg
      rO5+Q0LrTQXAVtBs9Jh8QNhi+/KyNU0gJ83QeC/Li3UmHp3Cr6WwGSBlZ1FBujtJ2ILMJrva
      pjY7w6lZwXXH2bKT4OTAJLs7s6qTyvcCN9YJNrNAGA+OjwSAKzTxba4KlZT4vr+taRrGDULf
      cn+42WwSRdF9y4xSnXb6jZPf27lxotytfW5F2neynWVZn3ptvnN5T3U17a3YZ7e/m26nfes2
      HwmA+00phdZ601/cZm7m3Hh7mylcm9nuTtPezHZRFGHb9n3L41bsczPbbdX3vZnP8cY2D1QA
      3MmX8TBRSiHE3d2d/VX2IHzfD1QAGMZ2697I5bumaVTWmV9YxAtvf7Pq40V43qect2hFeXWZ
      lVIVpTXl1SUq9TZaK2rlMoFUKBmwXFyk0Q7u6l18nDDwkXJzxxcVddKvNj1UFLBULNIOFTL0
      KC528iVDj2JxCT+6m8+pmxSllSLF5TUidefHzygKiKLb35dRMmSluEil0UbLkOWlIi1foiKf
      4uIi9ZaPinyWikt3WW46HoAaQHP+7ZNYuR5K6y2eOf4k7h3ViOtcuCA5fHjwE7fwa+tcWVih
      Xq8xNdzLpWIbGXo889heLp65zPDTx6A4zXrgErQ8HnvqGLEu1MrF+csk8lP0Zj79avP64jVW
      6j5r1Ra7slCWLu1AMFWIUfEiqg1N1q6j7Bi+1ctTj+y+9wzeNZ+Tr54i15ukRZ4njkzd0Z3b
      1dXrCNFPf/8n33ipLM2yWPFZK9fZ0++w2rZp+5q9IynKzZBqLaAnERAIF0+lefaxfXf1Th6I
      3qCxdJ7JAwfJfnCKmWvXuHzuLIm+SaYKmmtLTQ7un+DsmXOoZC9PT6Q4s1BDtdvE4zGOPnmA
      2YsXmLvucuyZw7zz2pu07F6ePZTj3LU6Tx9/gb5sH1NjMD0HQcXj4NOP4V14nyDVy97JEdoC
      LMdm9XqRyG9R949R6NIaHro5x9nFHNmgSHIozftvXiVwYxx/cjdvvn4at28XL37uSfpGdqGZ
      w4ql8Bp1jhw9zAfvnGNg1x64Po2TzuNVJEcfOcq773a7M8SdyxWGOXRoirNnT3P9YpmzH1xn
      bP9juI0FKoHL1EQvZ9+5QG7sAAOsUqwERBKkjvHEsVEuvnMCkhkO7S1w+tR7ZIb30+eWaQQJ
      nnjqaXqGJlB6HuEm8NpVDh19hOvvnqNnbAqxMIOVyOPVV3n06L19Hg9AE6hDq5CVckCrtEB2
      YJyhQoa1RsRnP/c8aX+dKD3A6GAB247z5PNfZN+e3Txz7DCokF0Hj/HYVD/rKwu0nD52D/US
      Wi7HnnmeQspCtkpMF+scOnyYnh6L0mqTsu+T5MPDVv/Efr74hRfoz/eR6sIMfkpJWvUG2ur0
      Y2o2GijL5tCxZ3lk1yBrK4vE+kYZ7s0ggWrxGlWyHNg9jlAezbZHO5KsXJ9GpQbZNz5A5LVp
      e1UCde+rI3ZD0K7gyxiLi0VGJ6fIxBRRvJfPPvc0zZUFeoZ3UcgmSWQHee74C+w/uJ+jk0NE
      doxHnzrOeE4wOzdPz/AuBnqSKDfH8eNPk3ShtjpHKUpxaM8uIKDV8qiHkvLcDH6sjwOTwxB4
      tNoNwujuR5c9EAHgijYnXn2Tgf1HOXrkEWKqjRQuR/ZNcPLEG/h9e9mViogUJPP9pG0oFArE
      UxnSyTyt9cvMeTH27XmEqX4bT1vk8wNk450Pxm+3WSvO8Oprb6IH9hDMvYPTO4KqLXHm6lUu
      njrDWqnEm6+/wcCewyS78Klcu3CWhtVHvm8cUblEy06RTebI5WL0FPrYtecwOdtHWi420KjX
      uX7pXV4/c4FdU7u4ePoUE3sP0qqXufT+GU6du8LevROcOnWB3Xsn7z2D98QmqC3y1rtXOXj4
      IEcfewyvXiWW7mW81+XEyTMMH3iMWNhAODF6+wq4MZd8Tw+5Qh/5RJLL508j8xM8+eij2GET
      bbsMDw/fLJCteo3rV9/j9bffY3T3FJffOcXQ1D68ZpWr59/hrXc+YO+eSc6eOsfEnj13/U4e
      gHMAw7h/HogawDDul/8fFvb2jK6E1hsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Global Covid Cases, Deaths and Percentage' width='192'>
      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
      6ZyhzdNA4gAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='97' name='Global Numbers' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='USA Hospitals, ICU and Deaths' width='192'>
      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
      LXJosAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='USA Vaccination Drive' width='192'>
      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
      sBX8/7A6RqLGKTpgAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Vaccination Drive in Top 10 Countries' width='192'>
      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
      RCMBROxp/n9DwzjPT2oZbgAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
